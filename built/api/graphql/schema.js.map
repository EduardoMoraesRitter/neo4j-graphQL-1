{"version":3,"sources":["../../../src/api/graphql/schema.js"],"names":[],"mappings":";;;;;;AAAA;;AAQA;;;;;;AAEA,IAAI,SAAS,QAAQ,qBAAR,CAAT;;AAEJ,IAAI,UAAU,QAAQ,YAAR,EAAsB,MAAtB,CAAV;AACJ,IAAI,OAAO,QAAQ,YAAR,EAAsB,MAAtB,CAAP;;AAEJ,IAAI,cAAc,+BAAsB;AACpC,UAAM,UAAN;AACA,YAAO,OAAO;AACV,iBAAQ,EAAC,MAAK,gBAAM,WAAN,EAAd;AACA,WAAE,EAAC,4BAAD,EAAF;AACA,eAAM,EAAC,yBAAD,EAAN;AACA,eAAM,EAAC,MAAM,yBAAgB,gBAAM,OAAN,CAAtB,EAAP;MAJG;CAFO,CAAd;;AAWJ,IAAI,SAAS,2BAAkB;AAC5B,WAAM,+BAAsB;AACvB,cAAM,OAAN;;AAEA,gBAAO,OAAO;AACV,sBAAS;AACL,sBAAK,WAAL;AACA,sBAAK;AACD,wBAAG,EAAC,4BAAD,EAAH;AACA,wBAAG,EAAC,4BAAD,EAAH;AACA,8BAAS,EAAC,4BAAD,EAAT;AACA,8BAAS,EAAC,4BAAD,EAAT;AACA,6BAAQ,EAAC,4BAAD,EAAR;;iBALJ;AAQA,yBAAS,CAAC,CAAD,EAAG,IAAH,KACT;AACI,wBAAI,KAAK,EAAL,EAAQ;AACR,+BAAQ,QAAQ,IAAR,CAAa,SAAb,CAAuB,EAAC,IAAG,KAAK,EAAL,EAAQ,WAAU,IAAV,EAAnC,CAAR,CADQ;qBAAZ;AAGA,wBAAI,KAAK,EAAL,EAAQ;AACR,+BAAQ,QAAQ,IAAR,CAAa,SAAb,CAAuB,EAAC,IAAG,KAAK,EAAL,EAAQ,WAAU,IAAV,EAAnC,CAAR,CADQ;qBAAZ;AAGA,wBAAI,KAAK,QAAL,EAAc;AACd,+BAAQ,QAAQ,IAAR,CAAa,QAAb,CAAsB,EAAC,QAAO,KAAK,QAAL,EAA9B,CAAR,CADc;qBAAlB;iBARK;;aAVb;;AAyBA,kBAAK;AACD,sBAAK,gBAAM,IAAN;AACL,sBAAK;AACD,wBAAG,EAAC,4BAAD,EAAH;iBADJ;AAGA,yBAAS,CAAC,CAAD,EAAG,IAAH,KAAY;AACjB,4BAAQ,GAAR,CAAY,IAAZ,EADiB;AAEjB,2BAAO,KAAK,WAAL,CAAiB,KAAK,EAAL,CAAxB,CAFiB;iBAAZ;aALb;UA1BG;KAHN,CAAN;CADU,CAAT;;kBA4CW","file":"schema.js","sourcesContent":["import {\r\n    GraphQLSchema,\r\n    GraphQLObjectType,\r\n    GraphQLInt,\r\n    GraphQLString,\r\n    GraphQLList\r\n} from 'graphql';\r\n\r\nimport types from './types';\r\n\r\nvar config = require('../../api.config.js');\r\n//import picture from '../picture';\r\nvar picture = require('../picture')(config);\r\nvar node = require('../picture')(config);\r\n\r\nlet pictureList = new GraphQLObjectType({\r\n    name: 'Pictures',\r\n    fields:() => ({\r\n        options:{type:types.listOptions},\r\n        q:{type:GraphQLString},\r\n        count:{type:GraphQLInt},\r\n        items:{type: new GraphQLList(types.picture)}\r\n    })\r\n});\r\n\r\n\r\nlet schema = new GraphQLSchema({\r\n   query:new GraphQLObjectType({\r\n        name: 'Query',\r\n       \r\n        fields:() => ({\r\n            pictures:{\r\n                type:pictureList,\r\n                args:{\r\n                    by:{type:GraphQLString },\r\n                    of:{type:GraphQLString },\r\n                    labelled:{type:GraphQLString},\r\n                    propName:{type:GraphQLString},\r\n                    propVal:{type:GraphQLString}\r\n                    \r\n                },\r\n                resolve: (_,args) => \r\n                {\r\n                    if (args.by){\r\n                        return  picture.list.predicate({id:args.by,predicate:\"BY\"});\r\n                    }\r\n                    if (args.of){\r\n                        return  picture.list.predicate({id:args.of,predicate:\"OF\"});\r\n                    }\r\n                    if (args.labelled){\r\n                        return  picture.list.labelled({labels:args.labelled});\r\n                    }\r\n                }\r\n               \r\n            }\r\n            ,\r\n            node:{\r\n                type:types.node,\r\n                args:{\r\n                    id:{type:GraphQLString }\r\n                },\r\n                resolve: (_,args) => {\r\n                    console.log(args);\r\n                    return node.getWithRels(args.id);\r\n                }\r\n            }\r\n        })\r\n    })\r\n});\r\n\r\nexport default schema;\r\n\r\n\r\n\r\n"]}