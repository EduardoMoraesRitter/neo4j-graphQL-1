{"version":3,"sources":["../../src/api/picture.js"],"names":[],"mappings":"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","file":"picture.js","sourcesContent":["ï»¿module.exports = function(config){\r\n    \r\n    \"use strict\";\r\n    \r\n    var extend = require('extend');\r\n    config = extend ( require('./config.default'), config);\r\n    var utils = require(\"./utils\")(config);\r\n    var type = require(\"./type\")(config);\r\n    var cypher = require(\"./cypher\")(config);\r\n    var image = require(\"./image\")(config);\r\n    var graph = require(\"./graph\")(config);\r\n    var relationship = require(\"./relationship\")(config);\r\n    var changeCase = require(\"change-case\");\r\n    var _ = require(\"lodash\");\r\n\r\n    var getPicture = function(id){\r\n    \r\n         var q= utils.getMatch(id,\"n\",\":Picture\") + \" with n optional match (n) - [:IMAGE] -> (i:Image)  return n,ID(n),LABELS(n),i,ID(i),LABELS(i) \";\r\n        \r\n        return cypher.executeQuery(q, \"row\")\r\n            .then(function (data) {\r\n                if (data.length) {\r\n\r\n                    var n = utils.camelCase(data[0].row[0]);\r\n                    n.id = data[0].row[1];\r\n                    n.labels = data[0].row[2];\r\n                    if (n.labels) n.labels.sort();\r\n\r\n                    n.images = [];\r\n                    \r\n                    for (let i=0;i < data.length;i++)\r\n                    {\r\n                        if (data[i].row[3]){\r\n                            var img = utils.camelCase(data[i].row[3]);\r\n                            img.id = data[i].row[4];\r\n                            img.labels= data[i].row[5];\r\n                            image.configure(img);\r\n                            n.images.push(img);\r\n                        }\r\n                    }\r\n                    \r\n                    return n;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n    \r\n};\r\n\r\nvar getList = function(q,options) {\r\n\r\n    if (options){\r\n        if (options.pageSize){\r\n            options.pageSize = parseInt(options.pageSize);\r\n        }\r\n        if (options.pageNum){\r\n            options.pageNum = parseInt(options.pageNum);\r\n        }\r\n        if (options.sort && options.sort != \"created\"){\r\n            options.sort = changeCase.pascalCase(options.sort);\r\n        }\r\n    }\r\n    \r\n    var defaults = {\r\n        pageNum:1,\r\n        pageSize:20,\r\n        sort:\"created\",\r\n        sortOrder:\"DESC\"\r\n    };\r\n    \r\n    options = _.extend(defaults,options);\r\n\r\n    var startIndex = (options.pageNum-1) * options.pageSize;\r\n    var endIndex = startIndex + options.pageSize;\r\n\r\n    var query = q + \"  return p,ID(p),LABELS(p),i,ID(i)\";\r\n    query += \" order by p.\" + options.sort + \" \" + options.sortOrder;\r\n    if (startIndex>0){\r\n        query += \" skip \" + (startIndex);\r\n    }\r\n    query += \" limit \" + options.pageSize;\r\n     \r\n    var count = q + \" return count(p)\";\r\n    \r\n    var statements = [query,count];\r\n     \r\n    var out = {options:options,q:query,count:0,items:[]};\r\n\r\n    return cypher.executeStatements(statements)\r\n    .then(function (results) {\r\n        \r\n        out.count = results[1].data[0].row[0];\r\n        \r\n      //  data = data.slice(startIndex,endIndex);\r\n      \r\n      var data = results[0].data;\r\n\r\n        for (let i=0;i < data.length;i++)\r\n        {\r\n              var props = utils.camelCase(data[i].row[0]);\r\n               var p;     \r\n                if (options.format===\"compact\"){\r\n                    p = {id:data[i].row[1],title:props.title};\r\n                }\r\n                else{\r\n                    p= _.extend(props,{\r\n                        id:data[i].row[1],\r\n                        labels: data[i].row[2]\r\n                    });\r\n                }\r\n                \r\n            p.image =  image.configure(data[i].row[3],options);\r\n            p.image.id = data[i].row[4];\r\n              \r\n\r\n            out.items.push(p);\r\n            \r\n        }\r\n\r\n        return out;\r\n                \r\n    }).error(function(x){\r\n        \r\n        \r\n    });\r\n};\r\n\r\n\r\nvar labelQuery = function(labels){\r\n    \r\n       labels = labels.split(',')\r\n                        .map(function(label){\r\n                            return changeCase.pascalCase(label); \r\n                            })\r\n                        .join(\":\");\r\n                        \r\n       var q = \"match (p:Picture) - [:IMAGE] -> (i:Image:Main)\";\r\n       q += \" where not p:CacheError and not p:NotFound  and p:\" + labels;\r\n       \r\n       return q;\r\n};\r\n\r\nvar propertyQuery = function(property){\r\n    \r\n    property.name=changeCase.pascalCase(property.name);\r\n    \r\n    var q = \"match (p:Picture) - [:IMAGE] -> (i:Image:Main)\";\r\n    q += \" where  not p:CacheError and not p:NotFound and p.\" + property.name + \"=~ '(?i).*\" + property.value + \".*' \";\r\n    \r\n    return q;\r\n\r\n};\r\n\r\n\r\nvar predicateQuery = function(predicate){\r\n\r\n    //allow multiple predicates input instead\r\n    var relType = predicate.lookup.toUpperCase();\r\n    if (relType===\"OF\")\r\n    {\r\n        relType +=\"|:DEPICTS\";\r\n    }\r\n    var q = utils.getMatch(predicate.target) + \" with n match (n) <- [:\" + relType + \"] - (p:Picture) - [:IMAGE] -> (i:Image:Main) where  not p:CacheError and not p:NotFound  \";\r\n    \r\n    return q;\r\n};\r\n    \r\nvar that = {\r\n    //Same as get node except that all images are returned instead of just the main one\r\n    get:function(id){\r\n        return getPicture(id);\r\n    }\r\n    ,\r\n    //Picture relationships added\r\n    getWithRels:function(id){\r\n        return getPicture(id).then(function(n){\r\n            \r\n            return relationship.list.conceptual(n).then(function(r){\r\n                  n.relationships=r;\r\n                return relationship.list.visual(n).then(function(r){\r\n                    n.relationships = _.merge(n.relationships,r);\r\n                    return n;\r\n                });\r\n            });\r\n        });\r\n    }\r\n    ,\r\n    //can optionally pass an alternative predicate such as 'of'\r\n    //same as /relationship/visual/id if not predicate passed in\r\n    list:\r\n    {\r\n        //Combines multiple queries\r\n        //params is json object posted\r\n        /*\r\n        combined:function(params,options){\r\n            \r\n            var q = [];\r\n            if (params.predicate){\r\n                q.push(predicateQuery(params.predicate));\r\n            }\r\n            if (params.property){\r\n                q.push(propertyQuery(params.property));\r\n            }\r\n            if (params.labels){\r\n                 q.push(labelQuery(params.labels));\r\n            }\r\n            \r\n            return getList(q,options);\r\n        }\r\n        ,\r\n        */\r\n        predicate:  function (params,options) {\r\n            \r\n            var q=predicateQuery({lookup:params.predicate,target:params.id});\r\n            return getList(q,options);\r\n        }\r\n        ,\r\n       //returns an array of pictures that have this label\r\n        labelled: function (params,options) {\r\n  \r\n            var q = labelQuery(params.labels);\r\n            return getList(q,options);\r\n            \r\n        }\r\n        ,\r\n        property:function(params,options){\r\n\r\n            var q = propertyQuery({name:params.prop,value:params.val});\r\n            return getList(q,options);\r\n        }\r\n    }\r\n   \r\n    \r\n   \r\n};\r\n\r\n\r\nreturn that;\r\n \r\n};\r\n\r\n"]}