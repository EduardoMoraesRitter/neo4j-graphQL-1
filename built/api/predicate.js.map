{"version":3,"sources":["../../src/api/predicate.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,SAAS,SAAT,CAAmB,IAAnB,EAAyB;AACvB,SAAO,MAAP,CAAc,IAAd,EAAoB,IAApB,EADuB;;AAGvB,MAAI,CAAC,KAAK,OAAL,EAAc;AACjB,SAAK,OAAL,GAAe,CAAC,CAAD,GAAI,KAAK,MAAL,EAAY,CAAhB,CAAf,CADiB;GAAnB;CAHF;;AAQA,UAAU,SAAV,CAAoB,YAApB,GAAmC,SAAS,YAAT,CAAsB,SAAtB,EAAiC;AAClE,OAAK,SAAL,GAAiB,SAAjB,CADkE;AAElE,SAAO,IAAP,CAFkE;CAAjC;;AAKnC,UAAU,SAAV,CAAoB,QAApB,GAA+B,SAAS,QAAT,GAAoB;AACjD,MAAI,KAAK,SAAL,KAAmB,IAAnB,IAA2B,CAAC,KAAK,WAAL,EAAkB;AAChD,WAAO,KAAK,OAAL,CAAa,OAAb,CAAqB,IAArB,EAA2B,GAA3B,EAAgC,WAAhC,EAAP,CADgD;GAAlD;AAGA,SAAO,KAAK,MAAL,CAAY,OAAZ,CAAoB,IAApB,EAA0B,GAA1B,EAA+B,WAA/B,EAAP,CAJiD;CAApB;;AAO/B,UAAU,SAAV,CAAoB,IAApB,GAA2B,SAAS,IAAT,GAAgB;AACzC,MAAI,KAAK,aAAL,EAAoB;AACtB,QAAI,KAAK,SAAL,KAAmB,IAAnB,EAAyB;AAC3B,WAAK,YAAL,CAAkB,KAAlB,EAD2B;KAA7B,MAEO;AACL,WAAK,YAAL,CAAkB,IAAlB,EADK;KAFP;GADF;AAOA,SAAO,IAAP,CARyC;CAAhB;;AAW3B,MAAM,MAAM;AACV,QAAM,MAAM;AACV,QAAI,WAAJ,GADU;AAEV,WAAO,GAAP,CAFU;GAAN;;AAKN,OAAK,UAAU;AACb,QAAI,IAAI,IAAI,IAAJ,CAAS,MAAT,CAAJ,CADS;AAEb,QAAI,CAAC,CAAD,EAAI;AACN,cAAQ,IAAR,CAAa,CAAC,UAAD,GAAa,MAAb,EAAoB,qBAApB,CAAb,EADM;AAEN,UAAI,EAAE,MAAF,EAAU,SAAS,CAAC,CAAD,GAAI,MAAJ,EAAW,CAAX,CAAT,EAAd,CAFM;KAAR;AAIA,WAAO,IAAI,SAAJ,CAAc,CAAd,CAAP,CANa;GAAV;AAQL,QAAM,EAAN;AACA,eAAa,MAAM,iBACjB,YADiB,CACJ,oCADI,EACkC,KADlC,EAEjB,IAFiB,CAEZ,QAAQ;AACX,UAAM,aAAa,EAAb,CADK;AAEX,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,MAAL,EAAa,GAAjC,EAAuC;AACrC,YAAM,IAAI,KAAK,CAAL,CAAJ,CAD+B;AAErC,YAAM,cAAc,EAAE,GAAF,CAAM,CAAN,EAAS,WAAT,IAAwB,KAAxB,CAFiB;AAGrC,UAAI,EAAE,GAAF,CAAM,CAAN,EAAS,MAAT,EAAiB;AACnB,mBAAW,EAAE,GAAF,CAAM,CAAN,EAAS,MAAT,CAAX,GAA8B;AAC5B,kBAAQ,EAAE,GAAF,CAAM,CAAN,EAAS,MAAT;AACR,iBAAO,EAAE,GAAF,CAAM,CAAN,EAAS,KAAT;AACP,qBAH4B;AAI5B,mBAAS,cAAc,EAAE,GAAF,CAAM,CAAN,EAAS,MAAT,GAAkB,EAAE,GAAF,CAAM,CAAN,EAAS,OAAT;SAJ3C,CADmB;OAArB,MAOO;AACL,gBAAQ,IAAR,CAAa,CAAC,6BAAD,GAAgC,EAAE,GAAF,CAAM,CAAN,CAAhC,EAAyC,CAAzC,CAAb,EADK;OAPP;KAHF;AAcA,QAAI,IAAJ,GAAW,UAAX,CAhBW;AAiBX,WAAO,UAAP,CAjBW;GAAR,CAFM;CAfT;;kBAsCS,IAAI,IAAJ","file":"predicate.js","sourcesContent":["import cypher from './cypher';\r\n\r\nfunction Predicate(data) {\r\n  Object.assign(this, data);\r\n\r\n  if (!this.reverse) {\r\n    this.reverse = `(${this.lookup})`;\r\n  }\r\n}\r\n\r\nPredicate.prototype.setDirection = function setDirection(direction) {\r\n  this.direction = direction;\r\n  return this;\r\n};\r\n\r\nPredicate.prototype.toString = function toString() {\r\n  if (this.direction === 'in' && !this.symmetrical) {\r\n    return this.reverse.replace(/_/g, ' ').toLowerCase();\r\n  }\r\n  return this.lookup.replace(/_/g, ' ').toLowerCase();\r\n};\r\n\r\nPredicate.prototype.flip = function flip() {\r\n  if (this.isDirectional) {\r\n    if (this.direction === 'in') {\r\n      this.setDirection('out');\r\n    } else {\r\n      this.setDirection('in');\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nconst api = {\r\n  init: () => {\r\n    api.refreshList();\r\n    return api;\r\n  },\r\n  // Can pass in active or reverse INFLUENCES OR INFLUENCED_BY\r\n  get: lookup => {\r\n    let p = api.list[lookup];\r\n    if (!p) {\r\n      console.warn(`Predicate ${lookup} does not exist in DB`);\r\n      p = { lookup, reverse: `(${lookup})` };\r\n    }\r\n    return new Predicate(p);\r\n  },\r\n  list: {},\r\n  refreshList: () => cypher.\r\n    executeQuery('match (n:Predicate) return ID(n),n', 'row').\r\n    then(data => {\r\n      const predicates = {};\r\n      for (let i = 0; i < data.length; i ++) {\r\n        const d = data[i];\r\n        const symmetrical = d.row[1].Symmetrical || false;\r\n        if (d.row[1].Lookup) {\r\n          predicates[d.row[1].Lookup] = {\r\n            lookup: d.row[1].Lookup,\r\n            force: d.row[1].Force, // Attract or Repel\r\n            symmetrical,\r\n            reverse: symmetrical ? d.row[1].Lookup : d.row[1].Reverse\r\n          };\r\n        } else {\r\n          console.warn(`Predicate without lookup (id:${d.row[0]})`);\r\n        }\r\n      }\r\n      api.list = predicates;\r\n      return predicates;\r\n    })\r\n};\r\n\r\nexport default api.init();\r\n"]}