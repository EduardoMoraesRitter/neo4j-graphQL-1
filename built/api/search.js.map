{"version":3,"sources":["../../app/api/search.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,UAAS,MAAT,EAAgB;;AAE7B,iBAF6B;;AAI7B,QAAI,SAAS,QAAQ,QAAR,CAAT,CAJyB;AAK7B,aAAS,OAAS,QAAQ,kBAAR,CAAT,EAAsC,MAAtC,CAAT,CAL6B;AAM7B,QAAI,SAAS,QAAQ,UAAR,EAAoB,MAApB,CAAT,CANyB;;AAS7B,QAAI,SAAS,SAAT,MAAS,CAAS,CAAT,EAAW;;AAEpB,eAAO,OAAO,YAAP,CAAoB,CAApB,EAAuB,KAAvB,EAA8B,IAA9B,CAAmC,UAAU,IAAV,EAAgB;AAC9C,gBAAI,MAAM,KAAK,GAAL,CAAS,UAAU,CAAV,EAAa;AAC5B,uBAAO;AACH,wBAAI,EAAE,GAAF,CAAM,CAAN,CAAJ;AACA,4BAAQ,EAAE,GAAF,CAAM,CAAN,CAAR;AACA,0BAAM,EAAE,GAAF,CAAM,CAAN,CAAN;AACA,2BAAO,EAAE,GAAF,CAAM,CAAN,CAAP;iBAJJ,CAD4B;aAAb,CAAf,CAD0C;AAS9C,mBAAO,GAAP,CAT8C;SAAhB,CAA1C,CAFoB;KAAX;;;AATgB,QA0BzB,OAAO;;AAEP,eAAM,eAAS,MAAT,EAAe,GAAf,EAAmB;AACrB,gBAAI,GAAJ,EAAS;AACL,oBAAI,IAAI,EAAJ,CADC;AAEL,oBAAI,QAAM,GAAN,EAAU;AACV,wBAAI,cAAc,MAAd,GAAsB,0CAAtB,CADM;iBAAd,MAII;AACA,wBAAI,cAAc,MAAd,GAAsB,6BAAtB,GAAsD,GAAtD,GAA4D,4CAA5D,CADJ;iBAJJ;;AAQA,uBAAO,OAAO,CAAP,CAAP,CAVK;aAAT;SADE;;KAFN,CA1ByB;;AA+C7B,WAAO,IAAP,CA/C6B;CAAhB","file":"search.js","sourcesContent":["module.exports = function(config){\r\n    \r\n    \"use strict\";\r\n    \r\n    var extend = require('extend');\r\n    config = extend ( require('./config.default'), config);\r\n    var cypher = require(\"./cypher\")(config);\r\n\r\n\r\n    var search = function(q){\r\n        \r\n        return cypher.executeQuery(q, \"row\").then(function (data) {\r\n                    var out = data.map(function (d) {\r\n                        return {\r\n                            id: d.row[0],\r\n                            Lookup: d.row[1],\r\n                            Type: d.row[2],\r\n                            Label: d.row[3]\r\n                        };\r\n                    });\r\n                    return out;\r\n                });\r\n        \r\n    };\r\n\r\n    //searches are performed on the Lookup property only as a 'contains' wildcard\r\n    var that = {\r\n\r\n        label:function(label,txt){\r\n            if (txt) {\r\n                let q = \"\";\r\n                if (txt===\"*\"){\r\n                    q = \"match (n:\" + label + \")  return ID(n),n.Lookup,n.Type,n.Label \";\r\n\r\n                }\r\n                else{\r\n                    q = \"match (n:\" + label + \") where n.Lookup =~ '(?i).*\" + txt + \".*'  return ID(n),n.Lookup,n.Type,n.Label \";\r\n                }\r\n                \r\n                return search(q);\r\n            }\r\n            \r\n        }\r\n\r\n    };\r\n\r\n\r\n    return that;\r\n\r\n};\r\n\r\n"]}