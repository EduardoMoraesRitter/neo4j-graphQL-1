{"version":3,"sources":["../../app/api/class.js"],"names":[],"mappings":"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","file":"class.js","sourcesContent":["module.exports = function(config)\r\n{\r\n    \"use strict\";\r\n\r\n    var extend = require('extend');\r\n    config = extend ( require('./config.default'), config);\r\n    var cypher = require(\"./cypher\")(config);\r\n    var utils = require(\"./utils\")(config);\r\n    var changeCase = require(\"change-case\");\r\n    var predicate = require(\"./predicate\")(config);\r\n    var _ = require(\"lodash\");\r\n\r\n\r\n\r\nvar that = {\r\n    //object containing all types keyed on Lookup\r\n    list: {}\r\n    ,\r\n    isClass: function (label) {\r\n        return that.list[label] !== undefined;\r\n    }\r\n    ,\r\n    getSchema:function(n){\r\n        \r\n    \r\n     //   return that.list[n.]\r\n    \r\n    \r\n    }\r\n    ,\r\n    refreshList: function () {\r\n        return predicate.refreshList().then(that.buildSchema);\r\n    }\r\n    ,\r\n    buildSchema:function(predicates){\r\n        \r\n        \r\n        var props = \"match (n:Class) optional match n - [r:PROPERTY] -> (p:Property) return n,collect(r),collect(p)\";\r\n        props += \"union match (n:Class) - [:EXTENDS*] -> (b:Class)-[r:PROPERTY]->(p:Property) return n,collect(r),collect(p)\";\r\n\r\n/*\r\n        //relationship definitions\r\n        var relsOut = \"match (n:Class) -[r] -> (c:Class)  where type(r)<>'EXTENDS' and type(r)<>'HAS' return n,collect(type(r)),collect(c)\";\r\n        var relsIn = \"match (n:Class) <-[r] - (c:Class)  where type(r)<>'EXTENDS' and type(r)<>'HAS' return n,collect(type(r)),collect(c)\";\r\n        \r\n        //inherit HAS relationships\r\n        var has = \"match (n:Class) - [:EXTENDS*] -> (b:Class) - [:HAS] -> (d:Class) return n,collect(d)\";\r\n        */\r\n\r\n        let relTypes = \"match (n:Class ) -[r] -> (c:Class)  where type(r)<>'EXTENDS'\";\r\n        relTypes += \"  return n.Lookup,collect(type(r)),'out' as direction,collect(c.Lookup),collect(r)\";\r\n        relTypes += \" union match (n:Class ) - [:EXTENDS*] -> (d:Class) - [r] -> (c:Class)  where type(r)<>'EXTENDS' \";\r\n        relTypes += \"  return n.Lookup,collect(type(r)),'out' as direction,collect(c.Lookup),collect(r)\";\r\n        relTypes += \" union match (n:Class ) <-[r] - (c:Class)  where type(r)<>'EXTENDS' \";\r\n        relTypes += \"  return n.Lookup,collect(type(r)),'in' as direction,collect(c.Lookup),collect(r)\";\r\n        relTypes += \" union match (n:Class ) - [:EXTENDS*] -> (d:Class) <- [r] - (c:Class)  where type(r)<>'EXTENDS' \"; \r\n        relTypes += \"  return n.Lookup,collect(type(r)),'in' as direction,collect(c.Lookup),collect(r)\";\r\n\r\n\r\n        \r\n        return cypher.executeStatements([props,relTypes])\r\n            .then(function (results) {\r\n\r\n            let types = {};\r\n            \r\n            results[0].data.forEach((pd)=>{\r\n                \r\n                let type = utils.camelCase(pd.row[0]);\r\n\r\n                if (!type.lookup) {\r\n                    console.warn(\"Type without lookup (id:\" + pd.row[0] + \")\");\r\n                    return;\r\n                }\r\n\r\n                let props = pd.row[2].map(e=>{return {name:changeCase.camelCase(e.Lookup),type:e.Type || \"string\"}});\r\n                let propsMetadata = pd.row[1].map(e=>{return {required:e.Required || false}});\r\n                type.props = _.keyBy(_.merge(props,propsMetadata),'name');\r\n\r\n\r\n                type.reltypes={};\r\n                let rels = results[1].data.filter((item)=>{return type.lookup === item.row[0];});\r\n                rels.forEach(e=>{\r\n                    let pred = e.row[1].map(p=>{return{predicate:predicate.list[p]}});\r\n                    let dir = _.fill(Array(pred.length),{direction:e.row[2]});\r\n                    let cls = e.row[3].map(c=>{return{class:c}});\r\n                    let nolazy = e.row[4].map(z =>{return {nolazy:z.nolazy || false}});\r\n                    let reltypes = _.keyBy(_.merge(pred,dir,cls,nolazy)\r\n                                    ,function(r){\r\n                                        return r.direction===\"in\"? r.predicate.reverse.toLowerCase() : r.predicate.lookup.toLowerCase();\r\n                                    });\r\n                    \r\n                    type.reltypes = _.assignIn(type.reltypes,reltypes);\r\n                });\r\n\r\n                //only add if it has props - otherwise it has no use\r\n                if (Object.keys(type.props).length){\r\n                    types[type.lookup] = type;\r\n                }\r\n            })\r\n\r\n            that.list = types;\r\n            return types;\r\n        });\r\n    }\r\n    ,\r\n    isSystemInfo: function (label) {\r\n        return label == \"Global\" || label == \"Type\" || label == \"Label\" || label == \"SystemInfo\";\r\n    },\r\n    //should be in the ui\r\n    getLabelClass: function (node, label) {\r\n\r\n        if (node && label === node.Type) {\r\n            return 'label-warning';\r\n        }\r\n        \r\n        if (that.isSystemInfo(label)) {\r\n            return 'label-system';\r\n        }\r\n        \r\n        if (that.isType(label)) {\r\n            return 'label-inverse pointer';\r\n        }\r\n        return 'label-info';\r\n    }\r\n    ,\r\n    personTypes: ['Painter',\r\n        'Illustrator',\r\n        'Philosopher',\r\n        'Poet',\r\n        'FilmMaker',\r\n        'Sculptor',\r\n        'Writer',\r\n        'Patron',\r\n        'Leader',\r\n        'Explorer',\r\n        'Composer',\r\n        'Scientist',\r\n        'Caricaturist',\r\n        'Mathematician']\r\n    ,\r\n    pictureTypes: ['Painting', 'Illustration', 'Drawing', 'Print']\r\n    ,\r\n    isPerson: function (type) {\r\n        return that.personTypes.indexOf(type) > -1;\r\n    }\r\n    /*\r\n    ,\r\n    items:function(id){\r\n        var q = \"match n:\"\r\n    }\r\n    */\r\n\r\n};\r\n\r\nreturn (function(){\r\n     that.refreshList();\r\n     return that;\r\n})();\r\n\r\n\r\n};"]}