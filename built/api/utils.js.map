{"version":3,"sources":["../../app/api/utils.js"],"names":[],"mappings":";;AAAC,OAAO,OAAP,GAAiB,UAAS,MAAT,EAClB;AACI,iBADJ;;AAGI,QAAI,SAAS,QAAQ,QAAR,CAAT,CAHR;AAII,aAAS,OAAS,QAAQ,kBAAR,CAAT,EAAsC,MAAtC,CAAT,CAJJ;AAKI,QAAI,SAAS,QAAQ,UAAR,EAAoB,MAApB,CAAT,CALR;AAMI,QAAI,aAAa,QAAQ,aAAR,CAAb,CANR;AAOI,QAAI,IAAI,QAAQ,QAAR,CAAJ,CAPR;;AAYA,QAAI,OAAO;;AAEP,kBAAS,kBAAS,EAAT,EAAY,KAAZ,EAAkB,KAAlB,EACT;AACI,oBAAQ,SAAS,EAAT,CADZ;AAEI,oBAAQ,SAAS,GAAT,CAFZ;;AAII,gBAAI,SAAS,KAAK,cAAL,CAAoB,EAApB,CAAT,CAJR;AAKI,gBAAI,CAAJ,CALJ;;AAOI,gBAAI,OAAO,EAAP,EAAU;AACV,oBAAI,YAAY,KAAZ,GAAoB,KAApB,GAA4B,cAA5B,GAA6C,KAA7C,GAAqD,MAArD,GAA8D,OAAO,EAAP,CADxD;aAAd,MAGK,IAAI,OAAO,KAAP,EAAa;AAClB,oBAAI,YAAY,KAAZ,GAAoB,KAApB,GAA4B,iBAA5B,GAAgD,KAAhD,GAAwD,YAAxD,GAAuE,OAAO,KAAP,GAAe,GAAtF,CADc;aAAjB;AAGL,mBAAO,CAAP,CAbJ;SADS;;AAiBT,wBAAiB,wBAAS,EAAT,EAAY;AACzB,gBAAI,MAAM,EAAN,CAAJ,EAAc;;;AAGN,oBAAI,GAAG,EAAH,EAAM;AACN,2BAAO,EAAC,IAAG,GAAG,EAAH,EAAX,CADM;iBAAV,MAGK,IAAI,OAAO,EAAP,KAAc,QAAd,EACb;AACI,2BAAO,EAAC,OAAM,WAAW,UAAX,CAAsB,EAAtB,CAAN,EAAR,CADJ;iBADS;aANb,MAYQ;AACA,uBAAO,EAAC,IAAG,EAAH,EAAR,CADA;aAZR;SADa;;AAkBjB,mBAAY,mBAAS,KAAT,EAAe;AACvB,gBAAI,MAAM,EAAN,CADmB;AAEvB,iBAAK,IAAI,GAAJ,IAAW,KAAhB,EAAsB;AAClB,oBAAI,WAAW,SAAX,CAAqB,GAArB,CAAJ,IAAiC,MAAM,GAAN,CAAjC,CADkB;aAAtB;AAGA,mBAAO,GAAP,CALuB;SAAf;;AAQZ,oBAAa,oBAAS,GAAT,EAAa;;AAEtB,gBAAI,EAAE,OAAF,CAAU,GAAV,CAAJ,EACA;;AAEI,qBAAK,IAAI,IAAG,CAAH,EAAK,IAAE,IAAI,MAAJ,EAAW,GAA3B,EAA+B;AAC3B,wBAAI,CAAJ,IAAO,WAAW,UAAX,CAAsB,IAAI,CAAJ,CAAtB,CAAP,CAD2B;iBAA/B;AAGA,uBAAO,GAAP,CALJ;aADA,MAQI;;AAEA,oBAAI,MAAM,EAAN,CAFJ;AAGA,qBAAK,IAAI,GAAJ,IAAW,GAAhB,EAAoB;AAChB,wBAAI,WAAW,UAAX,CAAsB,GAAtB,CAAJ,IAAkC,IAAI,GAAJ,CAAlC,CADgB;iBAApB;AAGA,uBAAO,GAAP,CANA;aARJ;SAFS;;;AAuBhB,iBAAS,iBAAS,GAAT,EAAc;;AAEpB,mBAAO,OAAO,IAAP,CAAY,GAAZ,EAAiB,MAAjB,KAA4B,CAA5B,IAAiC,KAAK,SAAL,CAAe,GAAf,MAAwB,KAAK,SAAL,CAAe,EAAf,CAAxB,CAFpB;SAAd;;;;AAQV,oBAAW,oBAAS,CAAT,EAAW,CAAX,EAAa,SAAb,EAAuB;AAC9B,wBAAY,aAAa,IAAb,CADkB;AAE9B,gBAAI,QAAQ,EAAE,GAAF,CAAM,UAAU,CAAV,EAAa;AAAE,uBAAO,EAAE,SAAF,CAAP,CAAF;aAAb,CAAd,CAF0B;AAG9B,gBAAI,QAAQ,EAAE,GAAF,CAAM,UAAU,CAAV,EAAa;AAAE,uBAAO,EAAE,SAAF,CAAP,CAAF;aAAb,CAAd,CAH0B;AAI9B,mBAAQ,EAAE,UAAF,CAAa,KAAb,EAAmB,KAAnB,EACH,GADG,CACC,UAAU,CAAV,EAAa;AACd,oBAAI,MAAM,EAAN,CADU;AAEd,oBAAI,SAAJ,IAAgB,CAAhB,CAFc;AAGf,uBAAO,GAAP,CAHe;aAAb,CADT,CAJ8B;SAAvB;;KA5EP,CAZJ;;AA0GA,WAAO,IAAP,CA1GA;CADkB","file":"utils.js","sourcesContent":["ï»¿module.exports = function(config)\r\n{\r\n    \"use strict\";\r\n    \r\n    var extend = require('extend');\r\n    config = extend ( require('./config.default'), config);\r\n    var cypher = require(\"./cypher\")(config);\r\n    var changeCase = require(\"change-case\");\r\n    var _ = require(\"lodash\");\r\n    \r\n\r\n\r\n\r\nvar that = {\r\n    //Provide match to match on label(s) eg :Picture\r\n    getMatch:function(id,alias,match)\r\n    {\r\n        match = match || \"\";\r\n        alias = alias || \"n\";\r\n        \r\n        var parsed = that.parseIdOrLabel(id);\r\n        var q;\r\n        \r\n        if (parsed.id){\r\n            q = \"match (\" + alias + match + \")  where ID(\" + alias + \") = \" + parsed.id;\r\n        }\r\n        else if (parsed.label){\r\n            q = \"match (\" + alias + match + \":Label)  where \" + alias + \".Label = '\" + parsed.label + \"'\";\r\n        }\r\n        return q;\r\n    }\r\n    ,\r\n    parseIdOrLabel : function(id){\r\n        if (isNaN(id)){\r\n                //handle possibility of node object being passed in\r\n                //instead of just the id\r\n                if (id.id){\r\n                    return {id:id.id};\r\n                }\r\n                else if (typeof id === \"string\")\r\n            {\r\n                return {label:changeCase.pascalCase(id)};\r\n            }\r\n                \r\n            }\r\n            else{\r\n                return {id:id};\r\n            }\r\n    }\r\n    ,\r\n    camelCase : function(props){\r\n        var out = {};\r\n        for (var key in props){\r\n            out[changeCase.camelCase(key)] = props[key];\r\n        }\r\n        return out;          \r\n    }\r\n    ,\r\n    pascalCase : function(obj){\r\n        \r\n        if (_.isArray(obj))\r\n        {\r\n            //array - pascal case array values\r\n            for (var i =0;i<obj.length;i++){\r\n                obj[i]=changeCase.pascalCase(obj[i]);\r\n            }\r\n            return obj;\r\n        }\r\n        else{\r\n            //object - pascal case property keys\r\n            var out = {};\r\n            for (var key in obj){\r\n                out[changeCase.pascalCase(key)] = obj[key];\r\n            }\r\n            return out;       \r\n        }\r\n        \r\n    }\r\n  \r\n    ,\r\n//return true if object is empty\r\n isEmpty: function(obj) {\r\n   \r\n    return Object.keys(obj).length === 0 && JSON.stringify(obj) === JSON.stringify({});\r\n\r\n}\r\n,\r\n//compares to object arrays \r\n//returning any elements that are in 'a' but not in 'b'\r\ndifference:function(a,b,compareOn){\r\n    compareOn = compareOn || \"id\";\r\n    var aComp = a.map(function (e) { return e[compareOn]; });\r\n    var bComp = b.map(function (e) { return e[compareOn]; });\r\n    return  _.difference(aComp,bComp)\r\n        .map(function (e) { \r\n            var out = {};\r\n            out[compareOn] =e;\r\n           return out;\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n};\r\n\r\n\r\nreturn that;\r\n\r\n};"]}