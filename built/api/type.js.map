{"version":3,"sources":["../../src/api/type.js"],"names":[],"mappings":"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","file":"type.js","sourcesContent":["module.exports = function(config)\r\n{\r\n    \"use strict\";\r\n\r\n    var extend = require('extend');\r\n    config = extend ( require('./config.default'), config);\r\n    var cypher = require(\"./cypher\")(config);\r\n    var utils = require(\"./utils\")(config);\r\n    var changeCase = require(\"change-case\");\r\n    var _ = require(\"lodash\");\r\n\r\n\r\n\r\nvar that = {\r\n    //object containing all types keyed on Lookup\r\n    list: {}\r\n    ,\r\n    isType: function (label) {\r\n        return that.list[label] !== undefined;\r\n    }\r\n    ,\r\n    schema:function(){//return list with full schema\r\n          return cypher.executeQuery(\r\n            //NB types would require at least one property to show up here\r\n            \"match (n:Type) return n,collect(r),collect(p),labels(n)\",\r\n                \"row\")\r\n                .then(function (data) {\r\n\r\n                });\r\n                \r\n    }\r\n    ,\r\n    refreshList: function () {\r\n        \r\n        return cypher.executeQuery(\r\n            //NB types would require at least one property to show up here\r\n            \"match (n:Type)-[r:PROPERTY]->(p:Property) return n,collect(r),collect(p),labels(n)\",\r\n                \"row\")\r\n                .then(function (data) {\r\n\r\n            let types = {};\r\n            \r\n            for (let i = 0; i < data.length; i++) {\r\n\r\n                var d = data[i];\r\n                var t = utils.camelCase(d.row[0]);\r\n                var labels = d.row[3];\r\n                \r\n                if (t.lookup) {\r\n                    var typeName = changeCase.camelCase(t.lookup);\r\n            \r\n                    var type = {\r\n                        lookup:typeName,\r\n                        description: t.description,\r\n                        props:{},\r\n                        isSystem: labels.indexOf(\"SystemInfo\") > -1,\r\n                        isGlobal:labels.indexOf(\"Global\") > -1\r\n                        };\r\n                    \r\n                    if (t.systemInfo){\r\n                        type.systemInfo = t.systemInfo;\r\n                    }\r\n                    \r\n                    var rels = d.row[1];//relationship has metadata such as 'Required' true/false\r\n                    var props = d.row[2];//array\r\n                    for (let j = 0; j < props.length; j++) {\r\n                        \r\n                        var p = utils.camelCase(props[j]);\r\n                        var propName = changeCase.camelCase(p.lookup);\r\n                        var rel = utils.camelCase(rels[j]);\r\n                        var prop = {\r\n                            name:propName,\r\n                            required: (rel && rel.required) || false,\r\n                            type:p.type || \"string\",\r\n                        };\r\n                        \r\n                        type.props[propName] = prop;\r\n                    }  \r\n                    types[typeName] = type;\r\n                } \r\n                else {\r\n                    console.warn(\"Type without lookup (id:\" + d.row[0] + \")\");\r\n                }\r\n            }\r\n\r\n            that.list = types;\r\n            return types;\r\n        });\r\n    }\r\n    ,\r\n    isSystemInfo: function (label) {\r\n        \r\n        return label == \"Global\" || label == \"Type\" || label == \"Label\" || label == \"SystemInfo\";\r\n    },\r\n    //should be in the ui\r\n    getLabelClass: function (node, label) {\r\n\r\n        if (node && label === node.Type) {\r\n            return 'label-warning';\r\n        }\r\n        \r\n        if (that.isSystemInfo(label)) {\r\n            return 'label-system';\r\n        }\r\n        \r\n        if (that.isType(label)) {\r\n            return 'label-inverse pointer';\r\n        }\r\n        return 'label-info';\r\n    }\r\n    ,\r\n    personTypes: ['Painter',\r\n        'Illustrator',\r\n        'Philosopher',\r\n        'Poet',\r\n        'FilmMaker',\r\n        'Sculptor',\r\n        'Writer',\r\n        'Patron',\r\n        'Leader',\r\n        'Explorer',\r\n        'Composer',\r\n        'Scientist',\r\n        'Caricaturist',\r\n        'Mathematician']\r\n    ,\r\n    pictureTypes: ['Painting', 'Illustration', 'Drawing', 'Print']\r\n    ,\r\n    isPerson: function (type) {\r\n        return that.personTypes.indexOf(type) > -1;\r\n    }\r\n    /*\r\n    ,\r\n    items:function(id){\r\n        var q = \"match n:\"\r\n    }\r\n    */\r\n\r\n};\r\n\r\nreturn (function(){\r\n     that.refreshList();\r\n     return that;\r\n})();\r\n\r\n\r\n};"]}