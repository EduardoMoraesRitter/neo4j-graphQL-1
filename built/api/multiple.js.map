{"version":3,"sources":["../../src/api/multiple.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,UAAS,MAAT,EAAgB;;AAE7B,iBAF6B;;AAI7B,QAAI,SAAS,QAAQ,QAAR,CAAT,CAJyB;AAK7B,aAAS,OAAS,QAAQ,kBAAR,CAAT,EAAsC,MAAtC,CAAT,CAL6B;AAM7B,QAAI,SAAS,QAAQ,UAAR,EAAoB,MAApB,CAAT,CANyB;AAO7B,QAAI,IAAI,QAAQ,QAAR,CAAJ,CAPyB;;AASjC,QAAI,OAAO;;AAET,cAAM,cAAU,QAAV,EAAoB;;AAEpB,gBAAI,oBAAoB,EAAE,UAAF,CAAa,SAAS,cAAT,EAAwB,SAAS,MAAT,CAAzD,CAFgB;AAGpB,gBAAI,iBAAiB,EAAE,UAAF,CAAa,SAAS,MAAT,EAAgB,SAAS,cAAT,CAA9C,CAHgB;AAIpB,gBAAI,UAAU,SAAS,KAAT,CAAe,GAAf,CAAmB,UAAU,IAAV,EAAgB;AAAE,uBAAO,KAAK,EAAL,CAAT;aAAhB,CAA7B,CAJgB;AAKpB,gBAAI,aAAa,EAAb,CALgB;;AAOpB,gBAAI,eAAe,MAAf,IAAyB,kBAAkB,MAAlB,EAA0B;AACnD,oBAAI,aAAa,EAAb,CAD+C;AAEnD,oBAAI,eAAe,MAAf,EAAuB;AACvB,iCAAa,YAAY,eAAe,IAAf,CAAoB,GAApB,CAAZ,CADU;iBAA3B;;AAIA,oBAAI,gBAAgB,EAAhB,CAN+C;AAOnD,oBAAI,kBAAkB,MAAlB,EAA0B;AAC1B,oCAAgB,eAAe,kBAAkB,IAAlB,CAAuB,GAAvB,CAAf,CADU;iBAA9B;AAGA,2BAAW,IAAX,CAAgB,EAAE,WAAW,8BAA8B,QAAQ,IAAR,CAAa,GAAb,CAA9B,GAAkD,GAAlD,GAAwD,aAAxD,GAAwE,UAAxE,EAA7B,EAVmD;aAAvD;;AAaA,gBAAI,WAAW,MAAX,EAAmB;AACnB,uBAAO,OAAO,iBAAP,CAAyB,UAAzB,EAAqC,IAArC,CAA0C,UAAU,OAAV,EAAmB;AAChE,2BAAO,OAAP,CADgE;iBAAnB,CAAjD,CADmB;aAAvB;;AApBoB,SAApB;;KAFJ,CAT6B;;AA2CjC,WAAO,IAAP,CA3CiC;CAAhB","file":"multiple.js","sourcesContent":["module.exports = function(config){\r\n    \r\n    \"use strict\";\r\n    \r\n    var extend = require('extend');\r\n    config = extend ( require('./config.default'), config);\r\n    var cypher = require(\"./cypher\")(config);\r\n    var _ = require(\"lodash\");\r\n\r\nvar that = {\r\n\r\n  save: function (multiple) {\r\n\r\n        var arrLabelsToRemove = _.difference(multiple.originalLabels,multiple.labels);\r\n        var arrLabelsToAdd = _.difference(multiple.labels,multiple.originalLabels);\r\n        var nodeIDs = multiple.nodes.map(function (node) { return node.id; });\r\n        var statements = [];\r\n        \r\n        if (arrLabelsToAdd.length || arrLabelsToRemove.length) {\r\n            var sAddLabels = \"\";\r\n            if (arrLabelsToAdd.length) {\r\n                sAddLabels = \" set n:\" + arrLabelsToAdd.join(\":\");\r\n            }\r\n            \r\n            var sRemoveLabels = \"\";\r\n            if (arrLabelsToRemove.length) {\r\n                sRemoveLabels = \" remove n:\" + arrLabelsToRemove.join(\":\");\r\n            }\r\n            statements.push({ statement: \"match(n) where ID(n) IN [\" + nodeIDs.join(',') + \"]\" + sRemoveLabels + sAddLabels });\r\n        }\r\n        \r\n        if (statements.length) {\r\n            return cypher.executeStatements(statements).then(function (results) {\r\n                return results;\r\n            });\r\n        }\r\n        //else ???\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nreturn that;\r\n\r\n\r\n    \r\n    \r\n};\r\n\r\n"]}